// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Tedd.ShortUrl.Web.Db;

namespace Tedd.ShortUrl.Web.Migrations
{
    [DbContext(typeof(ShortUrlDbContext))]
    [Migration("20171122222323_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tedd.ShortUrl.Web.Models.ShortUrlLogEntryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccessTimeUtc")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("ClientIp")
                        .HasMaxLength(16);

                    b.Property<long>("ShortUrlId");

                    b.HasKey("Id");

                    b.HasIndex("ShortUrlId");

                    b.ToTable("ShortUrlVisitLog");
                });

            modelBuilder.Entity("Tedd.ShortUrl.Web.Models.ShortUrlModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("CreatorAccessTokenId");

                    b.Property<DateTime?>("ExpiresUtc")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Key")
                        .HasMaxLength(10);

                    b.Property<string>("MetaData");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("CreatorAccessTokenId");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.ToTable("ShortUrl");
                });

            modelBuilder.Entity("Tedd.ShortUrl.Web.Models.ShortUrlTokenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Admin");

                    b.Property<string>("CreatorAccessToken")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.Property<bool>("Enabled");

                    b.HasKey("Id");

                    b.HasIndex("CreatorAccessToken")
                        .IsUnique();

                    b.ToTable("ShortUrlAccessTokens");
                });

            modelBuilder.Entity("Tedd.ShortUrl.Web.Models.ShortUrlLogEntryModel", b =>
                {
                    b.HasOne("Tedd.ShortUrl.Web.Models.ShortUrlModel", "ShortUrl")
                        .WithMany("VisitLog")
                        .HasForeignKey("ShortUrlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tedd.ShortUrl.Web.Models.ShortUrlModel", b =>
                {
                    b.HasOne("Tedd.ShortUrl.Web.Models.ShortUrlTokenModel", "CreatorAccessToken")
                        .WithMany("ShortUrls")
                        .HasForeignKey("CreatorAccessTokenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
